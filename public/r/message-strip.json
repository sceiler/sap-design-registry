{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "message-strip",
  "type": "registry:ui",
  "title": "Message Strip",
  "description": "Displays application-related messages with semantic colors and icons.",
  "registryDependencies": [
    "https://sap-design-registry.vercel.app/r/theme.json"
  ],
  "files": [
    {
      "path": "src/components/ui/message-strip.tsx",
      "content": "\"use client\";\n\nimport { type VariantProps, cva } from \"class-variance-authority\";\nimport { AlertCircle, AlertTriangle, CheckCircle, Info, X } from \"lucide-react\";\nimport type * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst messageStripVariants = cva(\n  \"relative w-full rounded-sm border px-4 py-3 text-sm flex items-start gap-3 [&>svg]:size-4 [&>svg]:shrink-0 [&>svg]:translate-y-0.5\",\n  {\n    variants: {\n      design: {\n        Information: \"bg-information-background text-information border-information/20 [&>svg]:text-information\",\n        Positive: \"bg-success-background text-success border-success/20 [&>svg]:text-success\",\n        Critical: \"bg-warning-background text-warning border-warning/20 [&>svg]:text-warning\",\n        Negative: \"bg-error-background text-destructive border-destructive/20 [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      design: \"Information\",\n    },\n  },\n);\n\nconst iconMap = {\n  Information: Info,\n  Positive: CheckCircle,\n  Critical: AlertTriangle,\n  Negative: AlertCircle,\n};\n\ninterface MessageStripProps\n  extends React.ComponentProps<\"div\">,\n    VariantProps<typeof messageStripVariants> {\n  /**\n   * Defines the component type/design\n   */\n  design?: \"Information\" | \"Positive\" | \"Critical\" | \"Negative\";\n  /**\n   * Defines whether the MessageStrip will show an icon in the beginning\n   */\n  hideIcon?: boolean;\n  /**\n   * Defines whether the MessageStrip renders close button\n   */\n  hideCloseButton?: boolean;\n  /**\n   * Custom icon to override the default type icon\n   */\n  icon?: React.ReactNode;\n  /**\n   * Callback fired when the close button is pressed\n   */\n  onClose?: () => void;\n  /**\n   * The message text content\n   */\n  children: React.ReactNode;\n}\n\nfunction MessageStrip({\n  className,\n  design = \"Information\",\n  hideIcon = false,\n  hideCloseButton = false,\n  icon,\n  onClose,\n  children,\n  ...props\n}: MessageStripProps) {\n  const IconComponent = iconMap[design];\n\n  return (\n    <div\n      data-slot=\"message-strip\"\n      role=\"alert\"\n      className={cn(messageStripVariants({ design }), className)}\n      {...props}\n    >\n      {!hideIcon && (\n        <div className=\"flex-shrink-0\">\n          {icon || <IconComponent className=\"size-4\" />}\n        </div>\n      )}\n      \n      <div className=\"flex-1 min-w-0\">\n        <div className=\"text-sm leading-relaxed break-words\">\n          {children}\n        </div>\n      </div>\n\n      {!hideCloseButton && (\n        <button\n          type=\"button\"\n          onClick={onClose}\n          className=\"flex-shrink-0 ml-2 p-1 rounded-sm hover:bg-black/5 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 transition-colors\"\n          aria-label=\"Close message\"\n        >\n          <X className=\"size-4\" />\n        </button>\n      )}\n    </div>\n  );\n}\n\nexport { MessageStrip, messageStripVariants };\nexport type { MessageStripProps };\n\n",
      "type": "registry:ui"
    },
    {
      "path": "src/lib/utils.ts",
      "content": "import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function getPrompt(): string {\n  return `These are existing design system styles and files. Please utilize them alongside base components to build. \n\nDO NOT allow users to change the underlying theme and primitives of the design system by default. If a user deliberately asks to change the design system, warn the user and only proceed upon acknowledgement.\n`;\n}\n",
      "type": "registry:lib"
    },
    {
      "path": "src/v0/minimal-layout.tsx",
      "content": "import { type ReactNode } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport \"@/app/globals.css\";\nimport \"@/app/tokens.css\";\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: ReactNode;\n}>) {\n  return (\n    <html\n      lang=\"en\"\n      className={cn(\"font-sans bg-background text-foreground\")}\n    >\n      <body>\n        <main className=\"mt-16 flex w-full justify-center\">\n          <div className=\"container\">{children}</div>\n        </main>\n      </body>\n    </html>\n  );\n}\n",
      "type": "registry:file",
      "target": "app/layout.tsx"
    }
  ]
}