{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "logo",
  "type": "registry:component",
  "title": "Brand Logo",
  "description": "A styled, simple, reusable logo",
  "registryDependencies": [
    "https://sap-design-registry.vercel.app/r/theme.json"
  ],
  "files": [
    {
      "path": "src/components/logo.tsx",
      "content": "\nexport function Logo() {\n  return (\n    <div className=\"flex items-center gap-2 ml-2\">\n      <svg \n        width=\"64\" \n        height=\"32\" \n        viewBox=\"0 0 455 225\" \n        className=\"h-8 w-auto\"\n        xmlns=\"http://www.w3.org/2000/svg\"\n      >\n        <linearGradient id=\"sap-gradient\" x2=\"0\" y2=\"225\" gradientUnits=\"userSpaceOnUse\">\n          <stop stopColor=\"#0ae\" offset=\"0\"/>\n          <stop stopColor=\"#05a\" offset=\"1\"/>\n        </linearGradient>\n        <path d=\"m455 0h-455v225h230\" fill=\"url(#sap-gradient)\"/>\n        <path d=\"m225 45v106l-39-106h-39l-33 88c-4-22-27-30-45-36-12-4-25-9-25-16 0-5 7-10 20-9 9 1 17 1 33 9l16-27c-15-8-35-12-51-12-19 0-35 6-45 16-7 7-10 16-11 26 0 14 5 24 16 32 9 6 20 10 30 13 13 4 23 8 23 15-1 9-11 11-18 11-12 1-22-1-37-10l-14 27c15 9 31 13 50 13 13 0 33-4 44-14l-2 9h38l7-17c15 4 32 5 47 0l5 17h68v-40h14c35 0 56-17 56-47 0-34-20-48-63-48zm-73 88 14-45h1l14 45c-10 3-20 3-29 0zm111-23v-36h10c13 0 23 4 23 17 0 14-10 19-23 19z\" fill=\"#fff\"/>\n      </svg>\n    </div>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "src/v0/minimal-layout.tsx",
      "content": "import { type ReactNode } from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport \"@/app/globals.css\";\nimport \"@/app/tokens.css\";\n\nexport default function RootLayout({\n  children,\n}: Readonly<{\n  children: ReactNode;\n}>) {\n  return (\n    <html\n      lang=\"en\"\n      className={cn(\"font-sans bg-background text-foreground\")}\n    >\n      <body>\n        <main className=\"mt-16 flex w-full justify-center\">\n          <div className=\"container\">{children}</div>\n        </main>\n      </body>\n    </html>\n  );\n}\n",
      "type": "registry:file",
      "target": "app/layout.tsx"
    },
    {
      "path": "src/app/demo/[name]/blocks/blank-page.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  MessageBox,\n  type MessageBoxAction,\n  type MessageBoxType,\n} from \"../../../../components/message-box\";\n\nexport default function MessageBoxDemo() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messageBoxType, setMessageBoxType] =\n    useState<MessageBoxType>(\"Confirm\");\n  const [lastAction, setLastAction] = useState<MessageBoxAction | null>(null);\n\n  const handleAction = (action: MessageBoxAction) => {\n    setLastAction(action);\n    console.log(\"[v0] MessageBox action:\", action);\n  };\n\n  const showConfirmation = () => {\n    setMessageBoxType(\"Confirm\");\n    setIsOpen(true);\n  };\n\n  const showInformation = () => {\n    setMessageBoxType(\"Information\");\n    setIsOpen(true);\n  };\n\n  const showSuccess = () => {\n    setMessageBoxType(\"Success\");\n    setIsOpen(true);\n  };\n\n  const showWarning = () => {\n    setMessageBoxType(\"Warning\");\n    setIsOpen(true);\n  };\n\n  const showError = () => {\n    setMessageBoxType(\"Error\");\n    setIsOpen(true);\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center gap-6 py-12\">\n      <div className=\"text-center space-y-2\">\n        <h1 className=\"text-3xl font-bold\">MessageBox Component Demo</h1>\n        <p className=\"text-muted-foreground\">\n          UI5-compatible MessageBox built with shadcn/ui and Tailwind CSS\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n        <Button onClick={showConfirmation} variant=\"default\">\n          Show Confirmation\n        </Button>\n        <Button onClick={showInformation} variant=\"secondary\">\n          Show Information\n        </Button>\n        <Button onClick={showSuccess} variant=\"outline\">\n          Show Success\n        </Button>\n        <Button onClick={showWarning} variant=\"outline\">\n          Show Warning\n        </Button>\n        <Button onClick={showError} variant=\"destructive\">\n          Show Error\n        </Button>\n      </div>\n\n      {lastAction && (\n        <div className=\"text-center p-4 bg-muted rounded-lg\">\n          <p className=\"text-sm text-muted-foreground\">Last action:</p>\n          <p className=\"font-semibold\">{lastAction}</p>\n        </div>\n      )}\n\n      <MessageBox\n        open={isOpen}\n        onOpenChange={setIsOpen}\n        type={messageBoxType}\n        title={\n          messageBoxType === \"Confirm\"\n            ? \"BestÃ¤tigung\"\n            : messageBoxType === \"Information\"\n            ? \"Information\"\n            : messageBoxType === \"Success\"\n            ? \"Success\"\n            : messageBoxType === \"Warning\"\n            ? \"Warning\"\n            : \"Error\"\n        }\n        onAction={handleAction}\n        emphasizedAction=\"OK\"\n      >\n        {messageBoxType === \"Confirm\" &&\n          'You can close the MessageBox by pressing \"Escape\" or selecting one of the footer buttons.'}\n        {messageBoxType === \"Information\" &&\n          \"This is an informational message to provide you with important details.\"}\n        {messageBoxType === \"Success\" &&\n          \"The operation completed successfully!\"}\n        {messageBoxType === \"Warning\" &&\n          \"Please review your input before proceeding.\"}\n        {messageBoxType === \"Error\" &&\n          \"An error occurred while processing your request.\"}\n      </MessageBox>\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/page.tsx"
    }
  ]
}