{
  "$schema": "https://ui.shadcn.com/schema/registry-item.json",
  "name": "brand-header",
  "type": "registry:component",
  "title": "Brand Header",
  "description": "A styled, simple, reusable header",
  "registryDependencies": [
    "button",
    "input",
    "avatar",
    "sidebar",
    "https://sap-design-registry.vercel.app/r/sonner.json",
    "https://sap-design-registry.vercel.app/r/logo.json",
    "https://sap-design-registry.vercel.app/r/theme.json"
  ],
  "files": [
    {
      "path": "src/components/brand-header.tsx",
      "content": "\"use client\";\n\nimport { HelpCircle, Search } from \"lucide-react\";\nimport Link from \"next/link\";\nimport { useState } from \"react\";\n\nimport { Avatar, AvatarFallback } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\n\nimport { Logo } from \"./logo\";\n\nexport function BrandHeader() {\n  const [isSearchOpen, setIsSearchOpen] = useState(false);\n\n  return (\n    <header className=\"z-50 w-full border-border border-b bg-background\">\n      <div className=\"flex h-16 items-center justify-between px-2\">\n        <div className=\"flex items-center\">\n          <Link href=\"/\" className=\"flex items-center\">\n            <Logo />\n          </Link>\n        </div>\n\n        <div className=\"hidden items-center space-x-1 md:flex\">\n          {isSearchOpen ? (\n            <div className=\"relative\">\n              <Input\n                type=\"text\"\n                placeholder=\"Search\"\n                className=\"h-9 w-64 pl-9\"\n                autoFocus\n                onBlur={() => setIsSearchOpen(false)}\n              />\n              <Search className=\"absolute top-2.5 left-3 size-4 text-foreground\" />\n            </div>\n          ) : (\n            <Button\n              variant=\"ghost\"\n              size=\"sm\"\n              className=\"text-foreground\"\n              onClick={() => setIsSearchOpen(true)}\n            >\n              <Search className=\"mr-2 size-4\" />\n              Search\n            </Button>\n          )}\n\n          <Button variant=\"ghost\" size=\"sm\" className=\"text-foreground\">\n            <HelpCircle className=\"mr-2 size-4\" />\n            Support\n          </Button>\n\n          <Button variant=\"ghost\" size=\"sm\" className=\"text-foreground\">\n            Upgrade Trial\n          </Button>\n\n          <Avatar className=\"size-8\">\n            <AvatarFallback className=\"bg-primary text-primary-foreground\">\n              <span className=\"text-xs\">ME</span>\n            </AvatarFallback>\n          </Avatar>\n        </div>\n\n        <div className=\"flex gap-2 md:hidden\">\n          <Button variant=\"ghost\" size=\"sm\" className=\"text-foreground\">\n            <Search className=\"h-5 w-5\" />\n          </Button>\n          <Avatar className=\"size-8\">\n            <AvatarFallback className=\"bg-primary text-primary-foreground\">\n              <span className=\"text-xs\">ME</span>\n            </AvatarFallback>\n          </Avatar>\n        </div>\n      </div>\n    </header>\n  );\n}\n",
      "type": "registry:component"
    },
    {
      "path": "src/v0/shell-layout.tsx",
      "content": "import { type ReactNode } from \"react\";\n\nimport { BrandHeader } from \"@/components/brand-header\";\n\nimport { cn } from \"@/lib/utils\";\n\nimport \"@/app/globals.css\";\nimport \"@/app/tokens.css\";\n\nexport default function ShellLayout({\n  children,\n}: Readonly<{\n  children: ReactNode;\n}>) {\n  return (\n    <html\n      lang=\"en\"\n      className={cn(\"font-sans bg-background text-foreground\")}\n    >\n      <body>\n        <BrandHeader />\n        <main className=\"mt-16 flex w-full justify-center\">\n          <div className=\"container\">{children}</div>\n        </main>\n      </body>\n    </html>\n  );\n}\n",
      "type": "registry:file",
      "target": "app/layout.tsx"
    },
    {
      "path": "src/app/demo/[name]/blocks/blank-page.tsx",
      "content": "\"use client\";\n\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  MessageBox,\n  type MessageBoxAction,\n  type MessageBoxType,\n} from \"../../../../components/message-box\";\n\nexport default function MessageBoxDemo() {\n  const [isOpen, setIsOpen] = useState(false);\n  const [messageBoxType, setMessageBoxType] =\n    useState<MessageBoxType>(\"Confirm\");\n  const [lastAction, setLastAction] = useState<MessageBoxAction | null>(null);\n\n  const handleAction = (action: MessageBoxAction) => {\n    setLastAction(action);\n    console.log(\"[v0] MessageBox action:\", action);\n  };\n\n  const showConfirmation = () => {\n    setMessageBoxType(\"Confirm\");\n    setIsOpen(true);\n  };\n\n  const showInformation = () => {\n    setMessageBoxType(\"Information\");\n    setIsOpen(true);\n  };\n\n  const showSuccess = () => {\n    setMessageBoxType(\"Success\");\n    setIsOpen(true);\n  };\n\n  const showWarning = () => {\n    setMessageBoxType(\"Warning\");\n    setIsOpen(true);\n  };\n\n  const showError = () => {\n    setMessageBoxType(\"Error\");\n    setIsOpen(true);\n  };\n\n  return (\n    <div className=\"flex flex-col items-center justify-center gap-6 py-12\">\n      <div className=\"text-center space-y-2\">\n        <h1 className=\"text-3xl font-bold\">MessageBox Component Demo</h1>\n        <p className=\"text-muted-foreground\">\n          UI5-compatible MessageBox built with shadcn/ui and Tailwind CSS\n        </p>\n      </div>\n\n      <div className=\"grid grid-cols-2 md:grid-cols-3 gap-4\">\n        <Button onClick={showConfirmation} variant=\"default\">\n          Show Confirmation\n        </Button>\n        <Button onClick={showInformation} variant=\"secondary\">\n          Show Information\n        </Button>\n        <Button onClick={showSuccess} variant=\"outline\">\n          Show Success\n        </Button>\n        <Button onClick={showWarning} variant=\"outline\">\n          Show Warning\n        </Button>\n        <Button onClick={showError} variant=\"destructive\">\n          Show Error\n        </Button>\n      </div>\n\n      {lastAction && (\n        <div className=\"text-center p-4 bg-muted rounded-lg\">\n          <p className=\"text-sm text-muted-foreground\">Last action:</p>\n          <p className=\"font-semibold\">{lastAction}</p>\n        </div>\n      )}\n\n      <MessageBox\n        open={isOpen}\n        onOpenChange={setIsOpen}\n        type={messageBoxType}\n        title={\n          messageBoxType === \"Confirm\"\n            ? \"BestÃ¤tigung\"\n            : messageBoxType === \"Information\"\n            ? \"Information\"\n            : messageBoxType === \"Success\"\n            ? \"Success\"\n            : messageBoxType === \"Warning\"\n            ? \"Warning\"\n            : \"Error\"\n        }\n        onAction={handleAction}\n        emphasizedAction=\"OK\"\n      >\n        {messageBoxType === \"Confirm\" &&\n          'You can close the MessageBox by pressing \"Escape\" or selecting one of the footer buttons.'}\n        {messageBoxType === \"Information\" &&\n          \"This is an informational message to provide you with important details.\"}\n        {messageBoxType === \"Success\" &&\n          \"The operation completed successfully!\"}\n        {messageBoxType === \"Warning\" &&\n          \"Please review your input before proceeding.\"}\n        {messageBoxType === \"Error\" &&\n          \"An error occurred while processing your request.\"}\n      </MessageBox>\n    </div>\n  );\n}\n",
      "type": "registry:page",
      "target": "app/page.tsx"
    }
  ]
}